= content_for :javascripts do
	:coffeescript
		$ ->
			# Fix table row widths collapsing on drag by manually resetting widths.
			fixHelper = (event, ui) ->
				ui.children().each () -> $(this).width( $(this).width() )
				return ui
				
			$( '#all_variants' ).sortable({ 
				items: 		 '.variant'
				handle: 	 '.handle'
				tolerance: 'pointer'
				helper: fixHelper
				update: (event, ui) ->
					variant_id   = ui.item.attr('id').split( '_' )[1]
					new_position = ui.item.prevAll( '.variant' ).length
					
					$.ajax({ 
						type: 'put'
						url:  '/manage/goods/#{ good.id }/variants/' + variant_id
						data: { "id": variant_id, "variant": { "display_order_position": new_position } }
						dataType: 'json'
					}) 
				})

			$( '#variants' ).delegate( 'a.edit', 'click', () ->
				$.fn.colorbox({
					href: $(this).attr('href')
					open: true
					onComplete: () ->
						$( 'form.variant' ).submit( () ->
							$.rails.handleRemote $( this )
							$.fn.colorbox.close()
							return false
						)
				})
				return false
			)

#variants
	%h2 Variants
	%table#all_variants
		%thead
			%tr
				%th
				- for option in good_options
					%th= label_tag "variant_option_value_#{ option.order_in_good }", option.name
				%th= label_tag "variant_weight", 'Weight (lbs.)'
				%th= label_tag "variant_price", 'Price'
				%th
	
		%tbody
			= render good_variants
			
		%tbody#add_variant
			%tr
				%td
				= form_for [ :manage, good, new_variant ], remote: true do |f|
					- for option in good_options
						%td.option= f.text_field :"option_value_#{ option.order_in_good }", placeholder: "Option #{ option.order_in_good }"
					%td.weight= f.text_field :weight, placeholder: 'Weight (Optional)'
					%td.price= f.text_field :price
					%td= f.submit 'Add Variant'